AWSTemplateFormatVersion: '2010-09-09'
Description: 'CI/CD Pipeline for the Crypto Trading System. Deployed as a nested stack from main.yaml.'

Parameters:
  ProjectName:
    Type: String
  GitHubOwner:
    Type: String
  GitHubRepo:
    Type: String
  GitHubBranch:
    Type: String
    Default: 'main'
  ArtifactsBucket:
    Type: String
  # Parâmetros para receber os ARNs das roles
  CodePipelineRoleArn:
    Type: String
  CodeBuildRoleArn:
    Type: String
  CloudFormationRoleArn:
    Type: String

Resources:
  # Conexão com o GitHub
  GitHubConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: !Sub '${ProjectName}-GitConnect'
      ProviderType: GitHub

  # Projeto do CodeBuild
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${ProjectName}-BuildProject'
      ServiceRole: !Ref CodeBuildRoleArn # Usando a role passada como parâmetro
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value: !Ref ArtifactsBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Tags:
        - Key: Project
          Value: !Ref ProjectName

  # O Pipeline de CI/CD
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${ProjectName}-Pipeline'
      RoleArn: !Ref CodePipelineRoleArn # Usando a role passada como parâmetro
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub_Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Ref GitHubConnection
                FullRepositoryId: !Sub '${GitHubOwner}/${GitHubRepo}'
                BranchName: !Ref GitHubBranch
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
        - Name: Deploy-Main
          Actions:
            - Name: Deploy_Infrastructure
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub '${ProjectName}-MainStack'
                TemplatePath: 'BuildArtifact::packaged-main.yaml'
                RoleArn: !Ref CloudFormationRoleArn # Usando a role passada como parâmetro
                Capabilities: 'CAPABILITY_IAM,CAPABILITY_NAMED_IAM'
                ParameterOverrides: !Sub |
                  {
                    "ProjectName": "${ProjectName}",
                    "GitHubOwner": "${GitHubOwner}",
                    "GitHubRepo": "${GitHubRepo}",
                    "ArtifactsBucket": "${ArtifactsBucket}"
                  }
              InputArtifacts:
                - Name: BuildArtifact

Outputs:
  PipelineName:
    Description: 'Name of the CodePipeline'
    Value: !Ref Pipeline

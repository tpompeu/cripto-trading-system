AWSTemplateFormatVersion: '2010-09-09'
Description: 'Cria o AWS CodePipeline para CI/CD do projeto CryptoTradingSystem. Este pipeline orquestra o build e o deploy da infraestrutura e da aplicação.'

Parameters:

  CodeStarConnectionArn:
    Type: String
    Description: "ARN da conexão do AWS CodeStar para o GitHub."
    Default: "arn:aws:codeconnections:us-east-1:957280467604:connection/6e9c6732-00bd-405c-8d63-3b3e916e8b33"

  ProjectName:
    Type: String
    Default: 'CryptoTradingSystem'
    Description: "O nome do projeto, pode conter letras maiúsculas para nomes de recursos que as permitem (ex: CodePipeline, CodeBuild)."

  ProjectNameLower:
    Type: String
    Default: 'cryptotradingsystem'
    Description: "O nome do projeto em letras minúsculas, para ser usado em nomes de recursos com restrições (ex: S3 Buckets)."
    AllowedPattern: '^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$'
    ConstraintDescription: "Deve conter apenas letras minúsculas, números, hifens, e ter entre 3 e 63 caracteres."

  GitHubRepo:
    Type: String
    Description: "Repositório GitHub no formato 'owner/repo'"
    Default: 'tpompeu/cripto-trading-system'

  GitHubBranch:
    Type: String
    Default: 'main'
    Description: "A branch do repositório que acionará o pipeline."

  GitHubTokenSecretName:
    Type: String
    Default: 'github-token'
    Description: "O nome do segredo no AWS Secrets Manager que contém o token do GitHub."

  CodeBuildRoleArn:
    Type: String
    Description: "ARN da Role do IAM para o serviço AWS CodeBuild."

  CloudFormationRoleArn:
    Type: String
    Description: "ARN da Role do IAM para o serviço AWS CloudFormation."

  CodePipelineRoleArn:
    Type: String
    Description: "ARN da Role do IAM para o serviço AWS CodePipeline."

Resources:
  # Bucket S3 para armazenar os artefatos gerados pelo pipeline (código zipado, templates empacotados, etc.)
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
          - '-'
          - - !Ref AWS::AccountId
            - !Ref ProjectNameLower
            - 'pipeline-artifacts'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: Project
          Value: !Ref ProjectName

  # Projeto do CodeBuild que define como o código é testado, empacotado e preparado para o deploy.
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${ProjectName}-BuildProject'
      ServiceRole: !Ref CodeBuildRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: ARTIFACT_BUCKET
            Value: !Ref ArtifactBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: 'buildspec.yml' # Arquivo que contém os comandos de build
      Tags:
        - Key: Project
          Value: !Ref ProjectName

  # O Pipeline principal que orquestra todo o fluxo de CI/CD
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref ProjectName
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        # 1. Fase de Fonte: Puxa o código do GitHub quando há um push na branch principal.
        - Name: Source
          Actions:
            - Name: GitHub_Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Select [0, !Split ['/', !Ref GitHubRepo]]
                Repo: !Select [1, !Split ['/', !Ref GitHubRepo]]
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false # Usa webhooks, mais eficiente
                OAuthToken: !Sub '{{resolve:secrets-manager:${GitHubTokenSecretName}:SecretString:token}}'
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

        # 2. Fase de Build: Executa o CodeBuild para instalar dependências, empacotar a aplicação e os templates.
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

        # 3. Fase de Deploy: Usa o CloudFormation para implantar a infraestrutura da aplicação.
        - Name: Deploy
          Actions:
            - Name: Deploy_Infrastructure
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE_STACK
                StackName: !Sub '${ProjectName}-AppStack'
                TemplatePath: 'BuildOutput::packaged-main.yaml' # Artefato de saída do build
                RoleArn: !Ref CloudFormationRoleArn
                ParameterOverrides: !Sub |
                  {
                    "ProjectName": "${ProjectName}",
                    "GitHubRepo": "${GitHubRepo}",
                    "S3ArtifactBucket": "${ArtifactBucket}",
                    "S3ArtifactKey": "code/application.zip"
                  }
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
      Tags:
        - Key: Project
          Value: !Ref ProjectName

Outputs:
  PipelineName:
    Description: "Nome do AWS CodePipeline criado"
    Value: !Ref Pipeline
  ArtifactBucketName:
    Description: "Nome do bucket S3 para artefatos do pipeline"
    Value: !Ref ArtifactBucket

AWSTemplateFormatVersion: '2010-09-09'
Description: 'CI/CD Pipeline for the Crypto Trading System. StackName: crypto-trading-pipeline-stack'

Parameters:
  ProjectName:
    Type: String
    Default: 'CryptoTradingSystem'
  GitHubOwner:
    Type: String
    Description: 'Your GitHub username or organization name.'
  GitHubRepo:
    Type: String
    Description: 'The name of the GitHub repository.'
  GitHubBranch:
    Type: String
    Default: 'main'
    Description: 'The branch to trigger the pipeline from.'
  ArtifactsBucket:
    Type: String
    Description: 'S3 bucket for pipeline artifacts. Must be created manually beforehand.'
  GitHubOAuthToken:
    Type: String
    Description: 'GitHub OAuth token'
    NoEcho: true

Resources:

  # =====================================================
  # ROLE PARA CODEBUILD
  # =====================================================
  
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-CodeBuildRole-From-Pipeline'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub '${ProjectName}-CodeBuildPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # Permissões CloudWatch Logs
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
              
              # Permissões S3 para artefatos
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:ListBucket'
                  - 's3:GetBucketLocation'
                Resource: '*'
              
              # Permissões CloudFormation
              - Effect: Allow
                Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DescribeStackEvents'
                  - 'cloudformation:DescribeStackResources'
                  - 'cloudformation:GetTemplate'
                  - 'cloudformation:ValidateTemplate'
                Resource: '*'
              
              # Permissões IAM para criar recursos
              - Effect: Allow
                Action:
                  - 'iam:CreateRole'
                  - 'iam:DeleteRole'
                  - 'iam:GetRole'
                  - 'iam:PassRole'
                  - 'iam:AttachRolePolicy'
                  - 'iam:DetachRolePolicy'
                  - 'iam:PutRolePolicy'
                  - 'iam:DeleteRolePolicy'
                  - 'iam:CreateInstanceProfile'
                  - 'iam:DeleteInstanceProfile'
                  - 'iam:AddRoleToInstanceProfile'
                  - 'iam:RemoveRoleFromInstanceProfile'
                Resource: '*'
              
              # Permissões Lambda
              - Effect: Allow
                Action:
                  - 'lambda:CreateFunction'
                  - 'lambda:UpdateFunctionCode'
                  - 'lambda:UpdateFunctionConfiguration'
                  - 'lambda:DeleteFunction'
                  - 'lambda:GetFunction'
                  - 'lambda:ListFunctions'
                  - 'lambda:CreateAlias'
                  - 'lambda:UpdateAlias'
                  - 'lambda:DeleteAlias'
                  - 'lambda:AddPermission'
                  - 'lambda:RemovePermission'
                  - 'lambda:CreateEventSourceMapping'
                  - 'lambda:DeleteEventSourceMapping'
                Resource: '*'
              
              # Permissões DynamoDB
              - Effect: Allow
                Action:
                  - 'dynamodb:CreateTable'
                  - 'dynamodb:DeleteTable'
                  - 'dynamodb:DescribeTable'
                  - 'dynamodb:UpdateTable'
                  - 'dynamodb:CreateGlobalTable'
                  - 'dynamodb:UpdateGlobalTable'
                  - 'dynamodb:DescribeGlobalTable'
                  - 'dynamodb:ListGlobalTables'
                  - 'dynamodb:TagResource'
                  - 'dynamodb:UntagResource'
                Resource: '*'
              
              # Permissões EC2
              - Effect: Allow
                Action:
                  - 'ec2:CreateVpc'
                  - 'ec2:DeleteVpc'
                  - 'ec2:DescribeVpcs'
                  - 'ec2:CreateSubnet'
                  - 'ec2:DeleteSubnet'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:CreateSecurityGroup'
                  - 'ec2:DeleteSecurityGroup'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:AuthorizeSecurityGroupIngress'
                  - 'ec2:AuthorizeSecurityGroupEgress'
                  - 'ec2:RevokeSecurityGroupIngress'
                  - 'ec2:RevokeSecurityGroupEgress'
                  - 'ec2:CreateInternetGateway'
                  - 'ec2:DeleteInternetGateway'
                  - 'ec2:AttachInternetGateway'
                  - 'ec2:DetachInternetGateway'
                  - 'ec2:CreateRouteTable'
                  - 'ec2:DeleteRouteTable'
                  - 'ec2:CreateRoute'
                  - 'ec2:DeleteRoute'
                  - 'ec2:AssociateRouteTable'
                  - 'ec2:DisassociateRouteTable'
                  - 'ec2:DescribeRouteTables'
                  - 'ec2:DescribeInternetGateways'
                  - 'ec2:CreateNatGateway'
                  - 'ec2:DeleteNatGateway'
                  - 'ec2:DescribeNatGateways'
                  - 'ec2:AllocateAddress'
                  - 'ec2:ReleaseAddress'
                  - 'ec2:DescribeAddresses'
                  - 'ec2:CreateLaunchTemplate'
                  - 'ec2:DeleteLaunchTemplate'
                  - 'ec2:DescribeLaunchTemplates'
                  - 'ec2:CreateTags'
                  - 'ec2:DescribeTags'
                Resource: '*'
              
              # Permissões SQS
              - Effect: Allow
                Action:
                  - 'sqs:CreateQueue'
                  - 'sqs:DeleteQueue'
                  - 'sqs:GetQueueAttributes'
                  - 'sqs:SetQueueAttributes'
                  - 'sqs:TagQueue'
                  - 'sqs:UntagQueue'
                Resource: '*'
              
              # Permissões EventBridge Scheduler
              - Effect: Allow
                Action:
                  - 'scheduler:CreateSchedule'
                  - 'scheduler:DeleteSchedule'
                  - 'scheduler:GetSchedule'
                  - 'scheduler:UpdateSchedule'
                  - 'scheduler:ListSchedules'
                  - 'scheduler:TagResource'
                  - 'scheduler:UntagResource'
                Resource: '*'
              
              # Permissões CloudWatch Logs
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:DeleteLogGroup'
                  - 'logs:DescribeLogGroups'
                  - 'logs:PutRetentionPolicy'
                  - 'logs:TagLogGroup'
                  - 'logs:UntagLogGroup'
                Resource: '*'

  # Role para o AWS CloudFormation
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-CloudFormationRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub '${ProjectName}-CloudFormationExecutionPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:*'
                  - 's3:*'
                  - 'dynamodb:*'
                  - 'lambda:*'
                  - 'sqs:*'
                  - 'events:*'
                  - 'ec2:*'
                  - 'ssm:*'
                  - 'logs:*'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'scheduler:GetSchedule'
                  - 'scheduler:CreateSchedule'
                  - 'scheduler:DeleteSchedule'
                  - 'scheduler:UpdateSchedule'
                  - 'scheduler:ListSchedules'
                Resource: '*' # Permissões amplas necessárias para o CFN gerenciar os recursos

  # =====================================================
  # ROLE PARA CODEPIPELINE
  # =====================================================
  
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-CodePipelineRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub '${ProjectName}-CodePipelinePolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # Permissões S3 para artefatos
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:ListBucket'
                  - 's3:GetBucketLocation'
                Resource: '*'
              # Permissões CodeBuild
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              # Permissões CloudFormation
              - Effect: Allow
                Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DescribeStackEvents'
                  - 'cloudformation:DescribeStackResources'
                  - 'cloudformation:GetTemplate'
                  - 'cloudformation:ValidateTemplate'
                Resource: '*'  
              # Permissões IAM
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${ProjectName}-*'
  # Projeto do CodeBuild
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${ProjectName}-BuildProject'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value: !Ref ArtifactsBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Tags:
        - Key: Project
          Value: !Ref ProjectName

  # O Pipeline de CI/CD
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${ProjectName}-Pipeline'
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub_Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
        - Name: Deploy
          Actions:
            - Name: Deploy_Infrastructure
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub '${ProjectName}-MainStack'
                TemplatePath: 'BuildArtifact::packaged-main.yaml'
                RoleArn: !GetAtt CloudFormationRole.Arn
                Capabilities: 'CAPABILITY_IAM,CAPABILITY_NAMED_IAM'
                ParameterOverrides: !Sub |
                  {
                    "ProjectName": "${ProjectName}",
                    "ArtifactsBucket": "${ArtifactsBucket}"
                  }
              InputArtifacts:
                - Name: BuildArtifact

Outputs:
  PipelineName:
    Description: 'Name of the CodePipeline'
    Value: !Ref Pipeline

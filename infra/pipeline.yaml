AWSTemplateFormatVersion: '2010-09-09'
Description: 'CI/CD Pipeline for the Crypto Trading System. StackName: crypto-trading-pipeline-stack'

Parameters:
  ProjectName:
    Type: String
    Default: 'CryptoTradingSystem'
  GitHubOwner:
    Type: String
    Description: 'Your GitHub username or organization name.'
  GitHubRepo:
    Type: String
    Description: 'The name of the GitHub repository.'
  GitHubBranch:
    Type: String
    Default: 'main'
    Description: 'The branch to trigger the pipeline from.'
  ArtifactsBucket:
    Type: String
    Description: 'S3 bucket for pipeline artifacts. Must be created manually beforehand.'


Resources:

  # Role para o AWS CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-CodeBuildRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub '${ProjectName}-CodeBuildPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:ListBucket'
                Resource: '*' # Limitado ao bucket de artefatos pelo CodePipeline
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}-BuildProject:*'
              - Effect: Allow
                Action:
                  - 'cloudformation:*'
                Resource: '*' # Necessário para empacotar e implantar

  # Role para o AWS CloudFormation
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-CloudFormationRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub '${ProjectName}-CloudFormationExecutionPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:*'
                  - 's3:*'
                  - 'dynamodb:*'
                  - 'lambda:*'
                  - 'sqs:*'
                  - 'events:*'
                  - 'ec2:*'
                  - 'ssm:*'
                  - 'logs:*'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'scheduler:GetSchedule'
                  - 'scheduler:CreateSchedule'
                Resource: '*' # Permissões amplas necessárias para o CFN gerenciar os recursos

  # Conexão com o GitHub via CodeStar Connections
  GitHubConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: !Sub '${ProjectName}-GitConnect'
      ProviderType: GitHub

  # Role para o CodePipeline
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-CodePipelineRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub '${ProjectName}-CodePipelinePolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:ListBucket'
                Resource: !Sub 'arn:aws:s3:::${ArtifactsBucket}/*'
              - Effect: Allow
                Action:
                  - 'codestar-connections:UseConnection'
                Resource: !Ref GitHubConnection
              - Effect: Allow
                Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Resource: !GetAtt CodeBuildProject.Arn
              - Effect: Allow
                Action:
                  - 'cloudformation:*'
                  - 'iam:PassRole'
                Resource: '*'

  # Projeto do CodeBuild
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${ProjectName}-BuildProject'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value: !Ref ArtifactsBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Tags:
        - Key: Project
          Value: !Ref ProjectName

  # O Pipeline de CI/CD
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${ProjectName}-Pipeline'
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub_Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Ref GitHubConnection
                FullRepositoryId: !Sub '${GitHubOwner}/${GitHubRepo}'
                BranchName: !Ref GitHubBranch
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
        - Name: Deploy
          Actions:
            - Name: Deploy_Infrastructure
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub '${ProjectName}-MainStack'
                TemplatePath: 'BuildArtifact::packaged-main.yaml'
                RoleArn: !GetAtt CloudFormationRole.Arn
                Capabilities: 'CAPABILITY_IAM,CAPABILITY_NAMED_IAM'
              InputArtifacts:
                - Name: BuildArtifact

Outputs:
  PipelineName:
    Description: 'Name of the CodePipeline'
    Value: !Ref Pipeline
